{"version":3,"sources":["components/contacts.module.css","redux/action.js","components/Form.js","components/ContactList.js","components/Filter.js","App.js","redux/reducer.js","redux/store.js","index.js"],"names":["module","exports","contactSubmit","createAction","changeFilter","contactDelete","connect","dispatch","handleSubmit","data","useState","name","setName","number","setNumber","inputNameId","uuidv4","inputNumberId","handleChangeInput","e","target","value","className","style","form","onSubmit","preventDefault","htmlFor","input","id","autoComplete","type","pattern","title","required","onChange","btn","state","contacts","filter","handleDelete","list","el","array","toLowerCase","split","i","length","match","RegExp","map","listItem","btnDelete","onClick","handleChange","label","App","reducer","createReducer","action","find","payload","alert","localStorage","setItem","JSON","stringify","elem","preloadState","contact","getItem","parse","initData","store","configureStore","middleware","getDefaultMiddleware","concat","logger","preloadedState","devTools","process","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b71b0d01.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"contacts_title__Wk0lb\",\"form\":\"contacts_form__1H_S4\",\"input\":\"contacts_input__2EfGa\",\"btn\":\"contacts_btn__2b2YV\",\"btnDelete\":\"contacts_btnDelete__3G6Z3\",\"list\":\"contacts_list__1we_0\",\"label\":\"contacts_label__2uknt\"};","import { createAction } from '@reduxjs/toolkit';\r\n\r\nexport const contactSubmit = createAction('contactSubmit');\r\nexport const changeFilter = createAction('changeFilter');\r\nexport const contactDelete = createAction('contactDelete');\r\n","import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport style from \"./contacts.module.css\";\nimport { v4 as uuidv4 } from \"uuid\";\n\nimport { connect } from 'react-redux';\nimport { contactSubmit } from '../redux/action';\n\nfunction Form({handleSubmit}) {\n  const [name, setName] = useState(\"\");\n  const [number, setNumber] = useState(\"\");\n\n  const inputNameId = uuidv4();\n  const inputNumberId = uuidv4();\n  \n  const handleChangeInput = (e) => {\n   if (e.target.name === 'name') {\n      setName(e.target.value);\n    } else if (e.target.name === 'number') {\n      setNumber(e.target.value);\n    }\n  };\n  return (\n      <>\n        <form\n          className={style.form}\n          onSubmit={(e) => {\n            e.preventDefault();\n            handleSubmit([name, number]);\n            setName(\"\");\n            setNumber(\"\");\n          }}\n        >\n          <label htmlFor={inputNameId}>Name</label>\n          <input\n            className={style.input}\n            id={inputNameId}\n            value={name}\n            autoComplete=\"off\"\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n            required\n            onChange={handleChangeInput}\n          />\n          <label htmlFor={inputNumberId}>Number</label>\n          <input\n            className={style.input}\n            id={inputNumberId}\n            value={number}\n            autoComplete=\"off\"\n            type=\"tel\"\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n            required\n            onChange={handleChangeInput}\n          />\n          <button type=\"submit\" className={style.btn}>\n            Add contact\n          </button>\n        </form>\n      </>\n    );\n\n}\n\nconst dispatchProps = dispatch => ({\n  handleSubmit: data => dispatch(contactSubmit(data))\n});\n\nexport default connect(null,dispatchProps)(Form);\n\nForm.propTypes = {\n  handleSubmit: PropTypes.func.isRequired,\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport style from \"./contacts.module.css\";\nimport { connect } from 'react-redux';\nimport { contactDelete } from '../redux/action';\n\n\nfunction ContactList({ contacts, filter, handleDelete }) {\n\n  const filterContacts = () => { \n    return contacts.filter((el) => {\n      const array = el.name.toLowerCase().split(\" \");\n\n      for (let i = 0; i < array.length; i++) {\n        if (array[i].toLowerCase().match(new RegExp(`^${filter}`)) !== null) {\n          return true;\n        }\n      }\n      return false;\n    });\n  };\n\n\n  return (\n      <ul className={style.list}>\n        {filterContacts().map((el) => (\n          <li className={style.listItem} key={el.id}>\n            {el.name}: {el.number}\n            <button\n              type=\"button\"\n              className={style.btnDelete}\n              id={el.id}\n              onClick={handleDelete}\n            >\n              Delete\n            </button>\n          </li>\n        ))}\n      </ul>\n    );\n}\n\nconst stateProps = state => {\n    return {\n        contacts: state?.contacts ?? [],\n        filter:state?.filter??\"\"\n    }\n};\n\nconst dispatchProps = dispatch => ({\n  handleDelete: e => dispatch(contactDelete(e.target.id))\n});\n\nexport default connect(stateProps,dispatchProps)(ContactList);\n\nContactList.propTypes = {\n  contacts: PropTypes.array.isRequired,\n  handleDelete: PropTypes.func.isRequired,\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport style from \"./contacts.module.css\";\n\nimport { connect } from 'react-redux';\nimport { changeFilter } from '../redux/action';\n\nfunction Filter({handleChange}) {\n  return (\n      <>\n        <label htmlFor=\"find\" className={style.label}>\n          Find contacts by name\n        </label>\n        <input\n          className={style.input}\n          autoComplete=\"off\"\n          id=\"find\"\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]\"\n          onChange={(e) => {\n            e.preventDefault();\n            handleChange(e);\n          }}\n        ></input>\n      </>\n    );\n}\n\nconst dispatchProps = dispatch => ({\n  handleChange: e => dispatch(changeFilter(e.target.value.toLowerCase()))\n});\n\nexport default connect(null, dispatchProps)(Filter);\n\nFilter.propTypes = {\n  handleChange: PropTypes.func.isRequired,\n};\n","import \"./App.css\";\nimport style from \"./components/contacts.module.css\";\nimport Form from \"./components/Form\";\nimport ContactList from \"./components/ContactList\";\nimport Filter from \"./components/Filter\";\n\nexport default function App() {\n  return (\n      <div className=\"App\">\n        <h1 className={style.title}>Phonebook</h1>\n        <Form />\n        <h2 className={style.title}>Contacts</h2>\n        <Filter />\n        <ContactList />\n      </div>\n    );\n}\n","import { v4 as uuidv4 } from \"uuid\";\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport { contactSubmit, changeFilter, contactDelete } from './action';\r\n\r\n\r\n \r\nfunction addContact(state = {}, action) {\r\n \r\n  if (!state.contacts.find((el) => el.name === action.payload[0])) {\r\n    const data = [...state.contacts, { name: action.payload[0], number: action.payload[1], id: uuidv4() }];\r\n    localStorage.setItem('contacts', JSON.stringify(data));\r\n    return { ...state, contacts: data };\r\n    } else {\r\n    alert(`${action.payload[0]} is already in contacts`);\r\n    return state;\r\n    }\r\n}\r\n\r\nfunction filterContact(state = {}, action) {\r\n  return { ...state, filter: action.payload };\r\n}\r\n\r\nfunction deleteContact(state = {}, action) {\r\n  const data = state.contacts.filter((elem) => elem.id !== action.payload);\r\n  localStorage.setItem('contacts', JSON.stringify(data));\r\n  return { ...state, contacts: data };\r\n}\r\n\r\nexport const reducer = createReducer({}, {\r\n  [contactSubmit]: addContact,\r\n  [changeFilter]: filterContact,\r\n  [contactDelete]: deleteContact,\r\n})","import { configureStore } from '@reduxjs/toolkit';\r\nimport logger from 'redux-logger';\r\nimport { reducer } from './reducer';\r\n\r\nconst initData = () => {\r\n    const contact = localStorage.getItem(\"contacts\");\r\n    if (contact) {\r\n      return JSON.parse(contact);\r\n    }\r\n    else { return [];}\r\n  };\r\n\r\nconst preloadState = {\r\n  contacts: initData(),\r\n  filter: '',\r\n}\r\n\r\nconst store = configureStore({\r\n  reducer,\r\n  middleware: (getDefaultMiddleware) => getDefaultMiddleware().concat(logger),\r\n  preloadedState: preloadState,\r\n  devTools: process.env.NODE_ENV === 'development',\r\n});\r\n\r\nexport default store;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}